cmake_minimum_required(VERSION 3.12)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

project(EngineCPP VERSION 0.0.1)

enable_language(CXX)


# get_cmake_property(_variableNames VARIABLES)
# list (SORT _variableNames)
# foreach (_variableName ${_variableNames})
#	message(STATUS "${_variableName}=${${_variableName}}")
# endforeach()

if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    add_compile_options(-Wno-missing-braces)
endif ()


# OR ("${CMAKE_BUILD_TYPE_INIT}" STREQUAL "Debug")
if (("${CMAKE_CONFIGURATION_TYPES}" STREQUAL "Debug") OR ("${CMAKE_BUILD_TYPE}" STREQUAL "Debug"))
    set(IS_DEBUG true)
else()
    set(IS_DEBUG false)
endif ()

add_subdirectory(ThirdParty2)

if (IS_DEBUG)
    add_compile_definitions(MEM_LEAK_DETECTION=1)
    add_compile_definitions(TOKEN_TYPE_SAFETY=1)
    add_compile_definitions(CONTAINER_BOUND_TEST=1)
    add_compile_definitions(CONTAINER_MEMORY_TEST=1)
    add_compile_definitions(DATABASE_BOUND_TEST=1)
    add_compile_definitions(DATABASE_DEBUG=1)
    add_compile_definitions(MATH_NORMALIZATION_TEST=1)
    add_compile_definitions(SCENE_BOUND_TEST=1)
    add_compile_definitions(GPU_DEBUG=1)
    add_compile_definitions(GPU_BOUND_TEST=1)
    add_compile_definitions(RENDER_BOUND_TEST=1)
    add_compile_definitions(COLLIDER_BOUND_TEST=1)
    add_compile_definitions(ASSET_COMPILER_BOUND_TEST=1)
    add_compile_definitions(STANDARD_ALLOCATION_BOUND_TEST=1)
    add_compile_definitions(USE_OPTICK=0)
else ()
    add_compile_definitions(MEM_LEAK_DETECTION=0)
    add_compile_definitions(TOKEN_TYPE_SAFETY=0)
    add_compile_definitions(CONTAINER_BOUND_TEST=0)
    add_compile_definitions(CONTAINER_MEMORY_TEST=0)
    add_compile_definitions(DATABASE_BOUND_TEST=0)
    add_compile_definitions(DATABASE_DEBUG=0)
    add_compile_definitions(MATH_BOUND_TEST=0)
    add_compile_definitions(SCENE_BOUND_TEST=0)
    add_compile_definitions(GPU_DEBUG=0)
    add_compile_definitions(GPU_BOUND_TEST=0)
    add_compile_definitions(RENDER_BOUND_TEST=0)
    add_compile_definitions(COLLIDER_BOUND_TEST=0)
    add_compile_definitions(ASSET_COMPILER_BOUND_TEST=0)
    add_compile_definitions(STANDARD_ALLOCATION_BOUND_TEST=0)
    add_compile_definitions(USE_OPTICK=0)
endif ()

add_subdirectory(src)
add_subdirectory(exe)
